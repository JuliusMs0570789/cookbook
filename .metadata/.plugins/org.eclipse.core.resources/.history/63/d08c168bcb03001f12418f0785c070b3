package edu.sb.cookbook.persistence;

import java.util.Comparator;

import javax.json.bind.annotation.JsonbProperty;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.validation.constraints.Size;

@Embeddable
// @Table(schema="cookbook", name="Address", indexes={})
// @DiscriminatorValue("Address") -> ist keine Entit√§t

public class Address implements Comparable<Address> {
	
	static public final Comparator<Address> COMPARATOR = Comparator
		.comparing(Address::getCountry)
		.thenComparing(Address::getCity)
		.thenComparing(Address::getStreet)
		.thenComparing(Address::getPostcode);
	
	@Size(max=15)
	@Column(nullable = false, updatable = true, length = 15)
	private String postcode;
	
	@Size(max=63)
	@Column(nullable = false, updatable = true, length = 63)
	private String street;
	
	@Size(max=63)
	@Column(nullable = false, updatable = true, length = 63)
	private String city;
	
	@Size(max=63)
	@Column(nullable = false, updatable = true, length = 63)
	private String country;
	
	/**
	 * Returns the postCode.
	 * @return the postcode, or {@code null} for none
	 */
	@JsonbProperty
	public String getPostcode () {
		return this.postcode;
	}
	
	/**
	 * Sets the postcode.
	 * @param postcode the postcode, or {@code null} for none
	 */
	public void setPostcode (final String postcode) {
		this.postcode = postcode;
	}
	
	/**
	 * Returns the street.
	 * @return the street, or {@code null} for none
	 */
	@JsonbProperty
	public String getStreet () {
		return this.street;
	}
	
	/**
	 * Sets the Street.
	 * @param street the street, or {@code null} for none
	 */
	public void setStreet (final String street) {
		this.street = street;
	}
	
	/**
	 * Returns the city.
	 * @return the city, or {@code null} for none
	 */
	@JsonbProperty
	public String getCity () {
		return this.city;
	}
	
	/**
	 * Sets the City.
	 * @param city the city, or {@code null} for none
	 */
	public void setCity (final String city) {
		this.city = city;
	}
	
	/**
	 * Returns the country.
	 * @return the country, or {@code null} for none
	 */
	@JsonbProperty
	public String getCountry () {
		return this.country;
	}
	
	/**
	 * Sets the Country.
	 * @param country the country, or {@code null} for none
	 */
	public void setCountry (final String country) {
		this.country = country;
	}

	@Override
	public int compareTo(Address other) {
		return COMPARATOR.compare(this, other);
	}
}
